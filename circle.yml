machine:
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  timezone:
    Europe/Berlin
  services:
    - docker
    - elasticsearch
    - redis

dependencies:
  pre:
  override:
  post:

test:
  pre:
    - sudo bash -c "echo \"listen_addresses = '*'\" >>
      /etc/postgresql/9.4/main/postgresql.conf"
    - sudo bash -c "echo \"host all all 0.0.0.0/0 trust\" >>
      /etc/postgresql/9.4/main/pg_hba.conf"
    - sudo /etc/init.d/postgresql restart
    - >
      docker build
      --build-arg SHOUTIT_ENV=test
      -t shoutit/shoutit-api:test .
  override:
    - >
      docker run -it
      -v ~/shoutit-api:/host_repo
      --add-host host_machine:$(ip addr show docker0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)
      shoutit/shoutit-api:test
      /bin/bash -c "
      cp -r /host_repo/.git ./
      && coverage run --source='src' --omit='*migrations*,*management*,*/v2/*,src/wsgi.py,src/manage.py,src/settings*,src/shoutit/settings.py,fabfile.py' src/manage.py test --keepdb
      && CODECLIMATE_REPO_TOKEN=31faacd4ff502f670a904e50a44fec3626ab30a0105c0163cdc0fc33bb659e66 codeclimate-test-reporter"
  post:

deployment:
  deploy-dev:
    branch: dev
    commands:
      - rm -rf src/configs
      - git clone git@github.com:shoutit/shoutit-api-configs.git src/configs
      - >
        docker build
        --build-arg SHOUTIT_ENV=dev
        -t shoutit/shoutit-api:dev .
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push shoutit/shoutit-api:dev
  deploy-prod:
    branch: prod
    commands:
      - rm -rf src/configs
      - git clone git@github.com:shoutit/shoutit-api-configs.git src/configs
      - >
        docker build
        --build-arg SHOUTIT_ENV=prod
        -t shoutit/shoutit-api:prod .
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push shoutit/shoutit-api:prod
