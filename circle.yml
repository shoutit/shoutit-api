machine:
  timezone:
    Europe/Berlin
  services:
    - docker
    - redis

dependencies:
  override:
    - docker info
    - wget https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-2.4.0.tar.gz
    - tar -xvf elasticsearch-2.4.0.tar.gz
    - elasticsearch-2.4.0/bin/elasticsearch --network.host=0.0.0.0: {background: true}
    - sudo bash -c "echo \"listen_addresses = '*'\"       >> /etc/postgresql/9.4/main/postgresql.conf"
    - sudo bash -c "echo \"host all all 0.0.0.0/0 trust\" >> /etc/postgresql/9.4/main/pg_hba.conf"
    - sudo /etc/init.d/postgresql restart
    - docker build --rm=false -t shoutit/shoutit-api:test .

test:
  override:
    - >
      docker run -it
      -e SHOUTIT_ENV=test
      -v ~/shoutit-api:/host_repo
      -v $CIRCLE_TEST_REPORTS:/circle_test_reports
      --add-host host_machine:$(ip addr show docker0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)
      shoutit/shoutit-api:test
      /bin/bash -c "
      cp -r /host_repo/.git ./
      && py.test --reuse-db --cov=src --cov-report= --cov-config .coveragerc --junitxml=/circle_test_reports/django/junit.xml
      && CODECLIMATE_REPO_TOKEN=$CODECLIMATE_REPO_TOKEN codeclimate-test-reporter"

deployment:
  deploy-dev:
    branch: dev
    commands:
      - docker build --rm=false -t shoutit/shoutit-api:dev .
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push shoutit/shoutit-api:dev
  deploy-prod:
    branch: prod
    commands:
      - docker build --rm=false -t shoutit/shoutit-api:prod .
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push shoutit/shoutit-api:prod
  deploy-tag:
    tag: /v[0-9]+(\.[0-9]+)*/
    commands:
      - docker build --rm=false -t shoutit/shoutit-api:$CIRCLE_TAG .
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push shoutit/shoutit-api:$CIRCLE_TAG
