# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import re
import django.utils.timezone
import django.db.models.deletion
from django.conf import settings
import uuidfield.fields
import django.core.validators


class Migration(migrations.Migration):

    run_before = [
        ('push_notifications', '0001_initial'),
        ('authtoken', '0001_initial'),
    ]
    dependencies = [
        ('auth', '0001_initial'),
        ('contenttypes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('username', models.CharField(help_text='Required. 2 to 30 characters and can only contain A-Z, a-z, 0-9, and periods (.)', unique=True, max_length=30, verbose_name='username', validators=[django.core.validators.RegexValidator(re.compile(b'^[\\w.]+$'), 'Enter a valid username.', b'invalid'), django.core.validators.MinLengthValidator(2)])),
                ('first_name', models.CharField(max_length=30, verbose_name='first name', blank=True)),
                ('last_name', models.CharField(max_length=30, verbose_name='last name', blank=True)),
                ('email', models.EmailField(max_length=254, verbose_name='email address', blank=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Group', blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of his/her group.', verbose_name='groups')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Name', models.CharField(max_length=1024, db_index=True)),
                ('image', models.CharField(max_length=1024, null=True, blank=True)),
                ('About', models.TextField(default=b'', max_length=512, null=True, blank=True)),
                ('Phone', models.CharField(max_length=20, unique=True, null=True, blank=True)),
                ('Website', models.URLField(max_length=1024, null=True, blank=True)),
                ('Country', models.CharField(db_index=True, max_length=2, null=True, blank=True)),
                ('City', models.CharField(db_index=True, max_length=200, null=True, blank=True)),
                ('Latitude', models.FloatField(default=0.0)),
                ('Longitude', models.FloatField(default=0.0)),
                ('Address', models.CharField(db_index=True, max_length=200, null=True, blank=True)),
                ('Confirmed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Name', models.CharField(max_length=1024, db_index=True)),
                ('Source', models.IntegerField(default=0)),
                ('SourceID', models.CharField(max_length=128, blank=True)),
                ('Parent', models.ForeignKey(related_name=b'children', default=None, blank=True, to='shoutit.BusinessCategory', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BusinessConfirmation',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('DateSent', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BusinessCreateApplication',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Name', models.CharField(db_index=True, max_length=1024, null=True, blank=True)),
                ('image', models.CharField(max_length=1024, null=True, blank=True)),
                ('About', models.TextField(default=b'', max_length=512, null=True, blank=True)),
                ('Phone', models.CharField(max_length=20, null=True, blank=True)),
                ('Website', models.URLField(max_length=1024, null=True, blank=True)),
                ('Longitude', models.FloatField(default=0.0)),
                ('Latitude', models.FloatField(default=0.0)),
                ('Country', models.CharField(db_index=True, max_length=2, null=True, blank=True)),
                ('City', models.CharField(db_index=True, max_length=200, null=True, blank=True)),
                ('Address', models.CharField(db_index=True, max_length=200, null=True, blank=True)),
                ('DateApplied', models.DateField(auto_now_add=True)),
                ('Status', models.IntegerField(default=0, db_index=True)),
                ('Category', models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, blank=True, to='shoutit.BusinessCategory', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BusinessSource',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Source', models.IntegerField(default=0)),
                ('SourceID', models.CharField(max_length=128, blank=True)),
                ('business', models.OneToOneField(related_name=b'Source', to='shoutit.Business')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Name', models.CharField(default=b'', unique=True, max_length=100, db_index=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CLUser',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('cl_email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(related_name=b'cluser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('IsDisabled', models.BooleanField(default=False)),
                ('Text', models.TextField(max_length=300)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConfirmToken',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Token', models.CharField(unique=True, max_length=24, db_index=True)),
                ('Type', models.IntegerField(default=0)),
                ('DateCreated', models.DateField(auto_now_add=True)),
                ('Email', models.CharField(max_length=128, blank=True)),
                ('IsDisabled', models.BooleanField(default=False)),
                ('user', models.ForeignKey(related_name=b'Tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('IsRead', models.BooleanField(default=False)),
                ('VisibleToRecivier', models.BooleanField(default=True)),
                ('VisibleToSender', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Conversation2',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('object_id', uuidfield.fields.UUIDField(max_length=32, null=True, blank=True)),
                ('content_type', models.ForeignKey(blank=True, to='contenttypes.ContentType', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Conversation2Delete',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('conversation', models.ForeignKey(related_name=b'deleted_set', to='shoutit.Conversation2')),
                ('user', models.ForeignKey(related_name=b'deleted_conversations2_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Code', models.CharField(max_length=10)),
                ('Country', models.CharField(max_length=10, blank=True)),
                ('Name', models.CharField(max_length=64, null=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DBCLConversation',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('in_email', models.EmailField(max_length=254, null=True, blank=True)),
                ('ref', models.CharField(max_length=100, null=True, blank=True)),
                ('from_user', models.ForeignKey(related_name=b'+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DealBuy',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Amount', models.IntegerField(default=1)),
                ('DateBought', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FbContest',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('ContestId', models.IntegerField(db_index=True)),
                ('FbId', models.CharField(max_length=24, db_index=True)),
                ('ShareId', models.CharField(default=None, max_length=50, null=True, blank=True)),
                ('user', models.ForeignKey(related_name=b'Contest_1', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FollowShip',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('date_followed', models.DateTimeField(auto_now_add=True)),
                ('state', models.IntegerField(default=0, db_index=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Description', models.TextField(default=b'', max_length=500)),
                ('Category', models.OneToOneField(related_name=b'+', null=True, blank=True, to='shoutit.Category')),
                ('OwnerBusiness', models.ForeignKey(related_name=b'Galleries', to='shoutit.Business')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GalleryItem',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('IsDisable', models.BooleanField(default=False)),
                ('IsMuted', models.BooleanField(default=False)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('Gallery', models.ForeignKey(related_name=b'GalleryItems', to='shoutit.Gallery')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Name', models.CharField(default=b'', max_length=512, blank=True)),
                ('Description', models.CharField(max_length=1000)),
                ('Price', models.FloatField(default=0.0)),
                ('State', models.IntegerField(default=0, db_index=True)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('Currency', models.ForeignKey(related_name=b'Items', to='shoutit.Currency')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LinkedFacebookAccount',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('facebook_id', models.CharField(max_length=24, db_index=True)),
                ('AccessToken', models.CharField(max_length=512)),
                ('ExpiresIn', models.BigIntegerField(default=0)),
                ('user', models.OneToOneField(related_name=b'linked_facebook', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LinkedGoogleAccount',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('credentials_json', models.CharField(max_length=2048)),
                ('gplus_id', models.CharField(max_length=64, db_index=True)),
                ('user', models.OneToOneField(related_name=b'linked_gplus', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Listen',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('date_listened', models.DateTimeField(auto_now_add=True)),
                ('listener', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Text', models.TextField(null=True, blank=True)),
                ('IsRead', models.BooleanField(default=False)),
                ('VisibleToRecivier', models.BooleanField(default=True)),
                ('VisibleToSender', models.BooleanField(default=True)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('Conversation', models.ForeignKey(related_name=b'Messages', to='shoutit.Conversation')),
                ('FromUser', models.ForeignKey(related_name=b'received_messages', to=settings.AUTH_USER_MODEL)),
                ('ToUser', models.ForeignKey(related_name=b'sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Message2',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('message', models.CharField(max_length=2000, null=True, blank=True)),
                ('conversation', models.ForeignKey(related_name=b'messages2', to='shoutit.Conversation2')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Message2Delete',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('conversation', models.ForeignKey(related_name=b'messages2_deleted_set', to='shoutit.Conversation2')),
                ('message', models.ForeignKey(related_name=b'deleted_set', to='shoutit.Message2')),
                ('user', models.ForeignKey(related_name=b'deleted_messages2_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Message2Read',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('conversation', models.ForeignKey(related_name=b'messages2_read_set', to='shoutit.Conversation2')),
                ('message', models.ForeignKey(related_name=b'read_set', to='shoutit.Message2')),
                ('user', models.ForeignKey(related_name=b'read_messages2_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('object_id', uuidfield.fields.UUIDField(max_length=32, null=True, blank=True)),
                ('content_type', models.ForeignKey(blank=True, to='contenttypes.ContentType', null=True)),
                ('conversation', models.ForeignKey(related_name=b'messages_attachments', to='shoutit.Conversation')),
                ('message', models.ForeignKey(related_name=b'attachments', to='shoutit.Message')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('object_id', uuidfield.fields.UUIDField(max_length=32, null=True, blank=True)),
                ('IsRead', models.BooleanField(default=False)),
                ('Type', models.IntegerField(default=0, choices=[(0, b'Listen'), (1, b'Message'), (2, b'Experience'), (3, b'Experience Shared'), (4, b'Comment')])),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('FromUser', models.ForeignKey(related_name=b'+', default=None, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('ToUser', models.ForeignKey(related_name=b'Notifications', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(blank=True, to='contenttypes.ContentType', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('object_id', uuidfield.fields.UUIDField(max_length=32, null=True, blank=True)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('DateUpdated', models.DateTimeField(auto_now=True)),
                ('Amount', models.FloatField()),
                ('Status', models.IntegerField()),
                ('Currency', models.ForeignKey(related_name=b'+', to='shoutit.Currency')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('name', models.CharField(unique=True, max_length=512, db_index=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Text', models.TextField(default=b'', max_length=2000, db_index=True, blank=True)),
                ('Type', models.IntegerField(default=0, db_index=True, choices=[(0, b'Request'), (1, b'Offer'), (2, b'Experience'), (3, b'Deal'), (4, b'Event')])),
                ('DatePublished', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('IsMuted', models.BooleanField(default=False, db_index=True)),
                ('IsDisabled', models.BooleanField(default=False, db_index=True)),
                ('Latitude', models.FloatField(default=0.0)),
                ('Longitude', models.FloatField(default=0.0)),
                ('CountryCode', models.CharField(db_index=True, max_length=2, null=True, blank=True)),
                ('ProvinceCode', models.CharField(db_index=True, max_length=200, null=True, blank=True)),
                ('Address', models.CharField(db_index=True, max_length=200, null=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('post_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='shoutit.Post')),
                ('State', models.IntegerField()),
                ('AboutBusiness', models.ForeignKey(related_name=b'Experiences', to='shoutit.Business')),
            ],
            options={
                'abstract': False,
            },
            bases=('shoutit.post',),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('post_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='shoutit.Post')),
                ('object_id', uuidfield.fields.UUIDField(max_length=32, null=True, blank=True)),
                ('EventType', models.IntegerField(default=0, choices=[(0, b'Follow User'), (1, b'Follow Tag'), (2, b'Shout Offer'), (3, b'Shout Request'), (4, b'Experience'), (5, b'Share Experience'), (6, b'Comment'), (7, b'Gallery Item'), (8, b'Post Deal'), (9, b'Buy Deal'), (10, b'Follow Business')])),
                ('content_type', models.ForeignKey(blank=True, to='contenttypes.ContentType', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('shoutit.post', models.Model),
        ),
        migrations.CreateModel(
            name='PredefinedCity',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('City', models.CharField(default=b'', unique=True, max_length=200, db_index=True, blank=True)),
                ('city_encoded', models.CharField(default=b'', unique=True, max_length=200, db_index=True, blank=True)),
                ('Country', models.CharField(default=b'', max_length=2, db_index=True, blank=True)),
                ('Latitude', models.FloatField(default=0.0)),
                ('Longitude', models.FloatField(default=0.0)),
                ('Approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('image', models.CharField(max_length=1024, null=True, blank=True)),
                ('Country', models.CharField(default=b'AE', max_length=200, db_index=True)),
                ('City', models.CharField(default=b'Dubai', max_length=200, db_index=True)),
                ('Latitude', models.FloatField(default=25.1993957)),
                ('Longitude', models.FloatField(default=55.2738326)),
                ('Bio', models.TextField(default=b'New Shouter!', max_length=512, null=True, blank=True)),
                ('Mobile', models.CharField(max_length=20, unique=True, null=True, blank=True)),
                ('birthday', models.DateField(null=True, blank=True)),
                ('Sex', models.NullBooleanField()),
                ('isSSS', models.BooleanField(default=False, db_index=True)),
                ('isSMS', models.BooleanField(default=False, db_index=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('object_id', uuidfield.fields.UUIDField(max_length=32, null=True, blank=True)),
                ('Text', models.TextField(default=b'', max_length=300, blank=True)),
                ('IsSolved', models.BooleanField(default=False)),
                ('IsDisabled', models.BooleanField(default=False)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, to='contenttypes.ContentType', null=True)),
                ('user', models.ForeignKey(related_name=b'Reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Code', models.CharField(max_length=256)),
                ('Name', models.CharField(max_length=1024)),
                ('Price', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ServiceBuy',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Amount', models.IntegerField(default=1)),
                ('DateBought', models.DateTimeField(auto_now_add=True)),
                ('Service', models.ForeignKey(related_name=b'Buyers', to='shoutit.Service')),
                ('user', models.ForeignKey(related_name=b'Services', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ServiceUsage',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Amount', models.IntegerField(default=1)),
                ('DateUsed', models.DateTimeField(auto_now_add=True)),
                ('Service', models.ForeignKey(related_name=b'BuyersUsages', to='shoutit.Service')),
                ('user', models.ForeignKey(related_name=b'ServicesUsages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SharedExperience',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('Experience', models.ForeignKey(related_name=b'SharedExperiences', to='shoutit.Experience')),
                ('OwnerUser', models.ForeignKey(related_name=b'SharedExperiences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SharedLocation',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Shout',
            fields=[
                ('post_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='shoutit.Post')),
                ('ExpiryDate', models.DateTimeField(default=None, null=True, db_index=True, blank=True)),
                ('ExpiryNotified', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('shoutit.post',),
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('shout_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='shoutit.Shout')),
                ('MinBuyers', models.IntegerField(default=0)),
                ('MaxBuyers', models.IntegerField(null=True, blank=True)),
                ('OriginalPrice', models.FloatField()),
                ('IsClosed', models.BooleanField(default=False)),
                ('ValidFrom', models.DateTimeField(null=True, blank=True)),
                ('ValidTo', models.DateTimeField(null=True, blank=True)),
                ('Item', models.ForeignKey(related_name=b'Deals', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='shoutit.Item', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('shoutit.shout',),
        ),
        migrations.CreateModel(
            name='ShoutWrap',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Rank', models.FloatField(default=1.0)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoredFile',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('File', models.CharField(max_length=1024)),
                ('Type', models.IntegerField()),
                ('user', models.ForeignKey(related_name=b'Documents', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoredImage',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('image', models.CharField(max_length=1024)),
                ('Item', models.ForeignKey(related_name=b'Images', blank=True, to='shoutit.Item', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Type', models.IntegerField(default=0, db_index=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Stream2',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('object_id', uuidfield.fields.UUIDField(max_length=32, null=True, blank=True)),
                ('type', models.SmallIntegerField(db_index=True, choices=[(0, b'Profile'), (1, b'Tag'), (2, b'Business'), (3, b'Related'), (4, b'Recommended')])),
                ('content_type', models.ForeignKey(blank=True, to='contenttypes.ContentType', null=True)),
                ('listeners', models.ManyToManyField(related_name=b'listening', through='shoutit.Listen', to=settings.AUTH_USER_MODEL)),
                ('posts', models.ManyToManyField(related_name=b'streams2', to='shoutit.Post')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Type', models.IntegerField(default=0)),
                ('State', models.IntegerField(default=0)),
                ('SignUpDate', models.DateTimeField(null=True, blank=True)),
                ('DeactivateDate', models.DateTimeField(null=True, blank=True)),
                ('UserName', models.CharField(max_length=64)),
                ('Password', models.CharField(max_length=24)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Name', models.CharField(default=b'', unique=True, max_length=100, db_index=True, blank=True)),
                ('image', models.CharField(default=b'/static/img/shout_tag.png', max_length=1024, null=True, blank=True)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('Definition', models.TextField(default=b'New Tag!', max_length=512, null=True, blank=True)),
                ('Creator', models.ForeignKey(related_name=b'TagsCreated', on_delete=django.db.models.deletion.SET_NULL, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('Parent', models.ForeignKey(related_name=b'ChildTags', blank=True, to='shoutit.Tag', null=True)),
                ('Stream', models.OneToOneField(related_name=b'OwnerTag', null=True, blank=True, to='shoutit.Stream')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('shout_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='shoutit.Shout')),
                ('StreamsCode', models.CharField(default=b'', max_length=2000, blank=True)),
                ('MaxFollowings', models.IntegerField(default=6)),
                ('MaxDistance', models.FloatField(default=180.0)),
                ('MaxPrice', models.FloatField(default=1.0)),
                ('IsShowMobile', models.BooleanField(default=True)),
                ('IsSSS', models.BooleanField(default=False)),
                ('BaseDatePublished', models.DateTimeField(auto_now_add=True)),
                ('RenewalCount', models.IntegerField(default=0)),
                ('Item', models.OneToOneField(related_name=b'Shout', null=True, blank=True, to='shoutit.Item')),
                ('RecommendedStream', models.OneToOneField(related_name=b'InitShoutRecommended', null=True, blank=True, to='shoutit.Stream')),
                ('RelatedStream', models.OneToOneField(related_name=b'InitShoutRelated', null=True, blank=True, to='shoutit.Stream')),
            ],
            options={
                'abstract': False,
            },
            bases=('shoutit.shout',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('RemoteIdentifier', models.CharField(max_length=1024)),
                ('RemoteData', models.CharField(max_length=1024)),
                ('RemoteStatus', models.CharField(max_length=1024)),
                ('DateCreated', models.DateTimeField(auto_now_add=True)),
                ('DateUpdated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('date_given', models.DateTimeField(auto_now_add=True)),
                ('permission', models.ForeignKey(to='shoutit.Permission')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('url', models.URLField(max_length=1024)),
                ('thumbnail_url', models.URLField(max_length=1024)),
                ('provider', models.CharField(max_length=1024)),
                ('id_on_provider', models.CharField(max_length=256)),
                ('duration', models.IntegerField(default=0)),
                ('item', models.ForeignKey(related_name=b'videos', blank=True, to='shoutit.Item', null=True)),
                ('shout', models.ForeignKey(related_name=b'videos', blank=True, to='shoutit.Shout', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', uuidfield.fields.UUIDField(primary_key=True, serialize=False, editable=False, max_length=32, blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation time', null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modification time', null=True)),
                ('Code', models.CharField(max_length=22)),
                ('DateGenerated', models.DateTimeField(auto_now_add=True)),
                ('IsValidated', models.BooleanField(default=False)),
                ('IsSent', models.BooleanField(default=False)),
                ('DealBuy', models.ForeignKey(related_name=b'Vouchers', to='shoutit.DealBuy')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='stream2',
            unique_together=set([('content_type', 'object_id', 'type')]),
        ),
        migrations.AddField(
            model_name='storedimage',
            name='Shout',
            field=models.ForeignKey(related_name=b'Images', blank=True, to='shoutit.Shout', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='shoutwrap',
            name='Shout',
            field=models.ForeignKey(related_name=b'ShoutWraps', to='shoutit.Shout'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='shoutwrap',
            name='Stream',
            field=models.ForeignKey(related_name=b'ShoutWraps', to='shoutit.Stream'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='shout',
            name='Tags',
            field=models.ManyToManyField(related_name=b'Shouts', to='shoutit.Tag'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='sharedexperience',
            unique_together=set([('Experience', 'OwnerUser')]),
        ),
        migrations.AddField(
            model_name='profile',
            name='Following',
            field=models.ManyToManyField(to='shoutit.Stream', through='shoutit.FollowShip'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='profile',
            name='Interests',
            field=models.ManyToManyField(related_name=b'Followers', to='shoutit.Tag'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='profile',
            name='LastToken',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, default=None, blank=True, to='shoutit.ConfirmToken', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='profile',
            name='Stream',
            field=models.OneToOneField(related_name=b'OwnerUser', to='shoutit.Stream'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(related_name=b'profile', null=True, blank=True, to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='profile',
            name='video',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, blank=True, to='shoutit.Video'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='post',
            name='OwnerUser',
            field=models.ForeignKey(related_name=b'Posts', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='post',
            name='Streams',
            field=models.ManyToManyField(related_name=b'Posts', to='shoutit.Stream'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='permission',
            name='users',
            field=models.ManyToManyField(related_name=b'permissions', through='shoutit.UserPermission', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='payment',
            name='Transaction',
            field=models.ForeignKey(related_name=b'Payment', to='shoutit.Transaction'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='payment',
            name='content_type',
            field=models.ForeignKey(blank=True, to='contenttypes.ContentType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(related_name=b'Payments', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='message2read',
            unique_together=set([('user', 'message', 'conversation')]),
        ),
        migrations.AlterUniqueTogether(
            name='message2delete',
            unique_together=set([('user', 'message', 'conversation')]),
        ),
        migrations.AddField(
            model_name='message2',
            name='deleted_by',
            field=models.ManyToManyField(related_name=b'deleted_messages2', through='shoutit.Message2Delete', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='message2',
            name='read_by',
            field=models.ManyToManyField(related_name=b'read_messages2', through='shoutit.Message2Read', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='message2',
            name='user',
            field=models.ForeignKey(related_name=b'+', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='listen',
            name='stream',
            field=models.ForeignKey(to='shoutit.Stream2'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='listen',
            unique_together=set([('listener', 'stream')]),
        ),
        migrations.AddField(
            model_name='galleryitem',
            name='Item',
            field=models.ForeignKey(related_name=b'+', to='shoutit.Item'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='galleryitem',
            unique_together=set([('Item', 'Gallery')]),
        ),
        migrations.AddField(
            model_name='followship',
            name='follower',
            field=models.ForeignKey(to='shoutit.Profile'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='followship',
            name='stream',
            field=models.ForeignKey(to='shoutit.Stream'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='dealbuy',
            name='Deal',
            field=models.ForeignKey(related_name=b'Buys', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='shoutit.Deal', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='dealbuy',
            name='user',
            field=models.ForeignKey(related_name=b'DealsBought', on_delete=django.db.models.deletion.SET_NULL, blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='dbclconversation',
            name='shout',
            field=models.ForeignKey(to='shoutit.Trade'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='dbclconversation',
            name='to_user',
            field=models.ForeignKey(related_name=b'+', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='conversation2delete',
            unique_together=set([('user', 'conversation')]),
        ),
        migrations.AddField(
            model_name='conversation2',
            name='deleted_by',
            field=models.ManyToManyField(related_name=b'deleted_conversations2', through='shoutit.Conversation2Delete', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='conversation2',
            name='last_message',
            field=models.OneToOneField(related_name=b'+', null=True, blank=True, to='shoutit.Message2'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='conversation2',
            name='users',
            field=models.ManyToManyField(related_name=b'conversations2', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='conversation',
            name='AboutPost',
            field=models.ForeignKey(related_name=b'+', to='shoutit.Trade'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='conversation',
            name='FromUser',
            field=models.ForeignKey(related_name=b'+', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='conversation',
            name='ToUser',
            field=models.ForeignKey(related_name=b'+', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='comment',
            name='AboutPost',
            field=models.ForeignKey(related_name=b'Comments', blank=True, to='shoutit.Post', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='comment',
            name='OwnerUser',
            field=models.ForeignKey(related_name=b'+', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='category',
            name='Tags',
            field=models.ManyToManyField(related_name=b'Category', null=True, to='shoutit.Tag', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='category',
            name='TopTag',
            field=models.OneToOneField(related_name=b'OwnerCategory', null=True, blank=True, to='shoutit.Tag'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='businesscreateapplication',
            name='LastToken',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, default=None, blank=True, to='shoutit.ConfirmToken', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='businesscreateapplication',
            name='business',
            field=models.ForeignKey(related_name=b'UserApplications', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='shoutit.Business', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='businesscreateapplication',
            name='user',
            field=models.ForeignKey(related_name=b'BusinessCreateApplication', on_delete=django.db.models.deletion.SET_NULL, blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='businessconfirmation',
            name='Files',
            field=models.ManyToManyField(related_name=b'Confirmation', to='shoutit.StoredFile'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='businessconfirmation',
            name='user',
            field=models.ForeignKey(related_name=b'BusinessConfirmations', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='business',
            name='Category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, blank=True, to='shoutit.BusinessCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='business',
            name='LastToken',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, default=None, blank=True, to='shoutit.ConfirmToken', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='business',
            name='Stream',
            field=models.OneToOneField(related_name=b'OwnerBusiness', null=True, blank=True, to='shoutit.Stream'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='business',
            name='user',
            field=models.OneToOneField(related_name=b'business', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Permission', blank=True, help_text='Specific permissions for this user.', verbose_name='user permissions'),
            preserve_default=True,
        ),
    ]
